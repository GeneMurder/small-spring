<?xml version="1.0" encoding="UTF-8"?>
<beans>

    <bean id="userDao" class="com.yangweiyao.springframework.test.dao.UserDao" init-method="init" destroy-method="close">
        <property name="version" value="unKnow" />
    </bean>

    <bean id="userService" class="com.yangweiyao.springframework.test.service.UserService" scope="prototype">
        <property name="userDao" ref="proxyUserDao"/>
    </bean>

    <bean id="proxyUserDao" class="com.yangweiyao.springframework.test.proxy.ProxyBeanFactory"/>

    <bean class="com.yangweiyao.springframework.test.processor.MyBeanFactoryPostProcessor"/>
    <bean class="com.yangweiyao.springframework.test.processor.MyBeanPostProcessor"/>

    <bean class="com.yangweiyao.springframework.test.event.CustomEventListener" />

    <bean id="iUserService" class="com.yangweiyao.springframework.test.service.impl.IUserServiceImpl" />

    <bean class="com.yangweiyao.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

    <bean id="beforeAdvice" class="com.yangweiyao.springframework.test.advice.UserServiceBeforeAdvice"/>

    <bean id="methodInterceptor" class="com.yangweiyao.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor">
        <property name="methodBeforeAdvice" ref="beforeAdvice"/>
    </bean>

    <bean id="pointcutAdvisor" class="com.yangweiyao.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
        <property name="expression" value="execution(* com.yangweiyao.springframework.test.service.IUserService.*(..))"/>
        <property name="advice" ref="methodInterceptor"/>
    </bean>

</beans>
